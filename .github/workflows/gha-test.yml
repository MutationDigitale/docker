name: Build and (maybe) Push Docker Images
on:
  push:
    branches:
      - gha-test
env:
  BUILD_PLATFORMS: linux/amd64, linux/arm64
jobs:
  build-base-images:
    name: Build PHP images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: ${{ github.event_name != 'release' }}
      matrix:
        php: ["8.1-rc", "8.0", "7.4", "7.3"]
        type: ["php-fpm", "cli"]
        include:
          - type: php-fpm
            type_short: fpm

          - type: cli
            type_short: cli
    steps:
      - name: Set env
        run: |
          echo "PROD_TAG=timkelty/${{ matrix.type }}:${{ matrix.php }}" >> $GITHUB_ENV
          echo "DEV_TAG=timkelty/${{ matrix.type }}:${{ matrix.php }}-dev" >> $GITHUB_ENV
          echo "DEV_DOCKERFILE=${{ matrix.php }}/dev.Dockerfile" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        # if: github.event_name == 'release'
        with:
          username: timkelty
          password: ${{ secrets.DOCKERHUB_TOKEN_TIM }}

      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Build production image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.php }}
          push: false
          load: true
          tags: ${{ env.PROD_TAG }}
          build-args: |
            PROJECT_TYPE=${{ matrix.type_short }}
            PHP_VERSION=${{ matrix.php }}

      - name: Build development image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.php }}
          file: ${{ env.DEV_DOCKERFILE }}
          push: false
          load: true
          tags: ${{ env.DEV_TAG }}
          build-args: |
            PROJECT_TYPE=${{ matrix.type }}
            PHP_VERSION=${{ matrix.php }}

  build-nginx-images:
      name: Build nginx images
      runs-on: ubuntu-latest
      strategy:
        fail-fast: ${{ github.event_name != 'release' }}
        matrix:
          php: ["8.1-rc", "8.0", "7.4", "7.3"]
          include:
            - context: nginx
            - dev_nginx_conf: dev.default.conf
      steps:
        - name: Set env
          run: |
            echo "PROD_TAG=timkelty/nginx:${{ matrix.php }}" >> $GITHUB_ENV
            echo "DEV_TAG=timkelty/nginx:${{ matrix.php }}-dev" >> $GITHUB_ENV
            echo "BASE_PROD_TAG=${{ matrix.php }}" >> $GITHUB_ENV
            echo "BASE_DEV_TAG=${{ matrix.php }}-dev" >> $GITHUB_ENV

        - name: Login to Docker Hub
          uses: docker/login-action@v1
          # if: github.event_name == 'release'
          with:
            username: timkelty
            password: ${{ secrets.DOCKERHUB_TOKEN_TIM }}

        - name: Check out the repository
          uses: actions/checkout@v2

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
          with:
            install: true

        - name: Build production image
          uses: docker/build-push-action@v2
          with:
            context: ${{ matrix.context }}
            push: false
            load: true
            tags: ${{ env.PROD_TAG }}
            build-args: |
              PHP_VERSION=${{ env.BASE_PROD_TAG }}

        - name: Build development image
          uses: docker/build-push-action@v2
          with:
            context: ${{ matrix.context }}
            push: false
            load: true
            tags: ${{ env.DEV_TAG }}
            build-args: |
              PHP_VERSION=${{ env.BASE_DEV_TAG }}
              NGINX_CONFIG=${{ matrix.dev_nginx_conf }}
