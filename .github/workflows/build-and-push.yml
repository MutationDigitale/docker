name: Build and (maybe) Push Docker Images
on:
  push:
    branches:
      - develop
  release:
    types: [published, created, edited]

jobs:
  build-base-images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: ${{ github.event_name != 'release' }}
      matrix:
        php: ["8.1-rc", "8.0", "7.4", "7.3"]
    name: php-fpm and cli ${{ matrix.php }} images
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        if: github.event_name == 'release'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build craftcms/php-fpm:${{ matrix.php }}
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.php }}
          file: ${{ matrix.php }}/Dockerfile
          push: ${{ github.event_name == 'release' }}
          platforms: linux/amd64,linux/arm64
          tags: craftcms/php-fpm:${{ matrix.php }}
          build-args: |
            PROJECT_TYPE=fpm
            PHP_VERSION=${{ matrix.php }}

      - name: Build craftcms/cli:${{ matrix.php }}
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.php }}
          file: ${{ matrix.php }}/Dockerfile
          push: ${{ github.event_name == 'release' }}
          platforms: linux/amd64,linux/arm64
          tags: craftcms/cli:${{ matrix.php }}
          build-args: |
            PROJECT_TYPE=cli
            PHP_VERSION=${{ matrix.php }}

  build-child-images:
    name: nginx and dev ${{ matrix.php }} images
    needs: build-base-images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ["8.1-rc", "8.0", "7.4", "7.3"]
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build craftcms/php-fpm:${{ matrix.php }}-dev
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.php }}
          file: ${{ matrix.php }}/dev.Dockerfile
          push: ${{ github.event_name == 'release' }}
          platforms: linux/amd64,linux/arm64
          tags: craftcms/php-fpm:${{ matrix.php }}-dev
          build-args: |
            PROJECT_TYPE=php-fpm
            PHP_VERSION=${{ matrix.php }}

      - name: Build craftcms/cli:${{ matrix.php }}-dev
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.php }}
          file: ${{ matrix.php }}/dev.Dockerfile
          push: ${{ github.event_name == 'release' }}
          platforms: linux/amd64,linux/arm64
          tags: craftcms/cli:${{ matrix.php }}-dev
          build-args: |
            PROJECT_TYPE=cli
            PHP_VERSION=${{ matrix.php }}

      - name: Build craftcms/nginx:${{ matrix.php }}
        uses: docker/build-push-action@v2
        with:
          context: nginx
          file: nginx/Dockerfile
          push: ${{ github.event_name == 'release' }}
          platforms: linux/amd64,linux/arm64
          tags: craftcms/nginx:${{ matrix.php }}
          build-args: |
            PHP_VERSION=${{ matrix.php }}

      - name: Build craftcms/nginx:${{ matrix.php }}-dev
        uses: docker/build-push-action@v2
        with:
          context: nginx
          file: nginx/Dockerfile
          push: ${{ github.event_name == 'release' }}
          platforms: linux/amd64,linux/arm64
          tags: craftcms/nginx:${{ matrix.php }}-dev
          build-args: |
            PHP_VERSION=${{ matrix.php }}-dev
            NGINX_CONF=dev.default.conf
